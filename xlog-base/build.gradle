import java.text.SimpleDateFormat

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = rootProject.ext.groupName
version = rootProject.ext.releaseVersion



// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }

            artifact sourcesJar
            artifact javadocJar

            artifactId 'xlog'
        }
    }
}

bintray {
    user = bintray_user //this usually comes from gradle.properties file in ~/.gradle
    key = bintray_api_key //this usually comes from gradle.properties file in ~/.gradle

//        configurations = ['deployables'] //When uploading configuration files
    // - OR -
    publications = ['mavenJava'] //When uploading Maven-based publication files
    // - AND/OR -
//        filesSpec { //When uploading any arbitrary files ('filesSpec' is a standard Gradle CopySpec)
//            from 'arbitrary-files'
//            into 'standalone_files/level1'
//            rename '(.+)\\.(.+)', '$1-suffix.$2'
//        }
    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload
    pkg {
        repo = 'maven'
        name = 'xlog'
        desc = 'Annotation-triggered method call logging based on Xposed for android developers.'
        websiteUrl = 'https://github.com/promeG/XLog'
        issueTrackerUrl = 'https://github.com/promeG/XLog/issues'
        vcsUrl = 'https://github.com/promeG/XLog.git'
        licenses = ['Apache-2.0']
        labels = ['xlog', 'xposed', 'android']
        publicDownloadNumbers = true
        //Optional version descriptor
        version {
            name = rootProject.ext.releaseVersion //Bintray logical version name
            released  = new SimpleDateFormat('yyyy-MM-dd\'T\'HH:mm:ss.SSSZZ').format(new Date()) //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
            vcsTag = '1.0.0'
            mavenCentralSync {
                sync = false //Optional (true by default). Determines whether to sync the version to Maven Central.
                user = 'userToken' //OSS user token
                password = 'paasword' //OSS user password
                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'commons-codec:commons-codec:1.10'
}